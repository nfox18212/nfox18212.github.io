
    .data

colorlist:
			.byte 0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
			.byte 0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2,0x2
			.byte 0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3
			.byte 0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4,0x4
			.byte 0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5,0x5
			.byte 0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6


    .text

colorlistp:    .word    colorlist

    .global seed
    .global set_color
    .global get_cell
    .global seedp

seed:
    push    {r4-r12, lr}

    ldr     r4, seedp
    ldr     r5, [r4, #0]        ; this is the initial seed
    mov     r6, #0x6            ; look for last 6 bits
    mov     r10, #1000          ; r10 will be the number of iterations
    ; use r0 and r1 as index 1 and 2

rngloop:
    

    pop     {r4-r12, lr}
    mov     pc, lr


reduce:
    cmp     r0, #54
    ittte   eq
    eoreq   r0, r0, #0x33
    lsreq   r0, #1
    beq     reduce
    bne     goback

goback:     ; this exists only to get around the limitation that you can't modify the pc in a it block
    mov     pc, lr